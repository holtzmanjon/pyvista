0.3.1 --> 0.4.0, August 2024

apogee.py : include reference array in unzip
            add utr() 
            mkyaml() : use last matching flat at APO, first at LCO
            add initial implementation of refcorr()
            add some test routines for PSF fits

boss.py : change default crbox to None
          html() --> mkhtml()
          allow to specify backend rather than forcing 'Agg'
          mkyaml() use -b1 to construct par files for older 2 spectrograph data (doesn't include b2/r2!)
          add arc_transform() routine
          fix mkyaml for plates, use hexdump

centroid.py : new module, move centering routines from stars here
          add radial asymmetry centering

dataclass.py : include minmax() here
           add option for skyerr attribute

gaia.py : add some more magnitudes to get()

image.py : more precise sig2fwhm
           use integer dividsion in box
           add bin() method to box
           significant mods to gaussian fits
           add implementation of Gauss-Hermite fits (not complete?)
           add fit2d(), mk2d()
           include header modification in window()
           allow separate x,y lags in xcorr2d()
           add transform() routine

imred.py : change default for filename template to include '.f*'
           add defaults for boxes
           add headerbox, boxfromheader()
           add min=, max= in movie()
           add utr option for APOGEE
           modifications to noise()
           add clip= for mkflat()
           add trim attribute to trim calibration products
           rename trim() to trimimage()
           add hexdump option for log()

mmm.py : add return of nsky
         np.int --> int

skycalc.py : add plot option for airmass()
             significant mods to airmas()
             add zd() calculation
             add pa() calculation
             add readtui()

spectra.py : more precise sig2fwhm
             np.int --> int
             add keywords to extract() : back_percentile= and method=
             extract returns background spectrum, which is stored in 
               sky attribute
             extract returns background_err spectrum, which is stored in 
               skyerr attribute
             allow for using sky attribute in WaveCal.identify(), and 
               implement in skyline()
             implement skyline for 2D images

stars.py : move centering routines to centroid module
           add brightest= to DAOFind
           implement Center namedtuple
           add mask= for photom()

tv.py : implement interactive box selector with intbox()
        more precise sig2fwhm
        add flush_events()
        add 3d plot for imexam()

data :  update ARCES_wave.fits using degree=5      

doc/notebooks: update KOSMOS for better FluxCal and to demonstrate writing/reading WaveCal

 
